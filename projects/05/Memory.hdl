// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    DMux(in=load,sel=address[14],a=dmux1,b=dmux2);
    RAM16K(in=in,load=dmux1, address=address[0..13], out=out1); /* 16K RAM */
    DMux(in=dmux2,sel=address[13],a=d2mux1,b=d2mux2);
    RAM4K(in=in,load=d2mux1 ,address=address[0..11], out=out2); /* 4K RAM */
    DMux(in=d2mux2,sel=address[0],a=d3mux1,b=d3mux2);
    RAM4K(in=in,load=d3mux1 ,address=address[0..11], out=out3); /* 4K RAM */

    Or(a=d2mux1,b=d3mux1,out=loadsc);

    Screen(in=in,load=loadsc,address=address[0..12],out=outsc);
    Register(in=in,load=d3mux2, out=out4); /* 16-bit register */
    Keyboard(out=outkb);

    Mux8Way16(a=out1,b=out1,c=out1,d=out1,e=outsc,f=outsc,g=outkb, h=outkb,sel[0]=address[0],sel[1]=address[13],sel[2]=address[14],out=out);
}