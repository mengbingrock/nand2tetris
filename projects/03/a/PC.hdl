// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    //And(a=reset,b=true,out=reset1);
    Not(in=reset,out=reset1);
    And16(a=in,b[0]=reset1,b[1]=reset1,b[2]=reset1,b[3]=reset1,b[4]=reset1,b[5]=reset1,b[6]=reset1,b[7]=reset1,b[8]=reset1,b[9]=reset1,b[10]=reset1,b[11]=reset1,b[12]=reset1,b[13]=reset1,b[14]=reset1,b[15]=reset1,out=in1);

    Not(in=reset,out=resetn);
    Not(in=load,out=loadn);

    And(a=resetn,b=loadn,out=reloadn);
    And(a=reloadn,b=inc,out=incf);

    
    Mux16(a=in1,b=out1,sel=incf,out=in2);

    Or(a=reset,b=inc,out=load1);
    Or(a=load1,b=load,out=load2);




    Add16(a=in2,b[0]=incf,b[1..15]=false,out=out2);
    Register(in=out2,load=load2,out=out1,out=out);

}
